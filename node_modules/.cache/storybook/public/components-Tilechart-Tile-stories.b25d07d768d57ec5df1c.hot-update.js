"use strict";
self["webpackHotUpdate_rrishabh_react_calender_heatmap"]("components-Tilechart-Tile-stories",{

/***/ "./src/components/Tilechart/Tile.stories.tsx":
/*!***************************************************!*\
  !*** ./src/components/Tilechart/Tile.stories.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Empty: () => (/* binding */ Empty),
/* harmony export */   Single: () => (/* binding */ Single),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Tilechart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tilechart */ "./src/components/Tilechart/Tilechart.tsx");

const meta = {
  title: "Chart/TileChart",
  component: _Tilechart__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ["autodocs", "tilechart", "ui"],
  parameters: {
    layout: "centered"
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const statuses = ["success", "warning", "alert"];
const dummyData = [];
for (let month = 0; month < 12; month++) {
  for (let day = 1; day <= 31; day++) {
    const date = new Date(2024, month, day);
    // Check if the day is valid for the current month
    if (date.getMonth() === month) {
      const status = statuses[Math.floor(Math.random() * statuses.length)];
      dummyData.push({
        date: date.toISOString().split('T')[0],
        status
      });
    }
  }
}
const Default = {
  args: {
    data: dummyData.map(item => ({
      ...item,
      date: item.date || "",
      status: item.status
    })),
    range: 12,
    onTileHover: (date, status) => {
      console.log(date, status);
    },
    tileText: 'Attendance Chart'
  }
};
const Empty = {
  args: {
    data: []
  }
};
const Single = {
  args: {
    data: dummyData.map(item => ({
      ...item,
      date: item.date || "",
      status: item.status
    })),
    range: 3
  }
};
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    data: dummyData.map(item => ({\n      ...item,\n      date: item.date || \"\",\n      status: (item.status as \"success\" | \"warning\" | \"alert\" | undefined)\n    })),\n    range: 12,\n    onTileHover: (date: string, status: \"success\" | \"warning\" | \"alert\" | undefined) => {\n      console.log(date, status);\n    },\n    tileText: 'Attendance Chart'\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Empty.parameters = {
  ...Empty.parameters,
  docs: {
    ...Empty.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    data: []\n  }\n}",
      ...Empty.parameters?.docs?.source
    }
  }
};
Single.parameters = {
  ...Single.parameters,
  docs: {
    ...Single.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    data: dummyData.map(item => ({\n      ...item,\n      date: item.date || \"\",\n      status: (item.status as \"success\" | \"warning\" | \"alert\" | undefined)\n    })),\n    range: 3\n  }\n}",
      ...Single.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Default","Empty","Single"];

/***/ })

});
//# sourceMappingURL=components-Tilechart-Tile-stories.b25d07d768d57ec5df1c.hot-update.js.map